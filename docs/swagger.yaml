basePath: /api/v1
definitions:
  models.Error:
    properties:
      error:
        type: string
    type: object
  models.Token:
    properties:
      token:
        type: string
    type: object
  models.User:
    properties:
      company:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      position:
        type: string
      surname:
        type: string
    type: object
  models.Users:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Esta es una API para gestionar usuarios.
  title: API de Usuarios
  version: "1.0"
paths:
  /GetUser/{id}:
    get:
      consumes:
      - application/json
      description: Recupera un usuario basado en su ID proporcionada en la ruta
      parameters:
      - description: ID del Usuario
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Users'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Obtiene un solo usuario
      tags:
      - consumos
  /NewUser:
    post:
      consumes:
      - application/json
      description: Agrega un nuevo usuario usando JWT
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Registra un nuevo usuario
      tags:
      - consumos
  /login:
    post:
      consumes:
      - application/json
      description: Autentica un usuario usando autenticación básica y genera un token
        JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BasicAuth: []
      summary: Autentica un usuario
      tags:
      - autenticación
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
